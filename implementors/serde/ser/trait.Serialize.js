(function() {var implementors = {};
implementors["lpc55"] = [{"text":"impl Serialize for Version","synthetic":false,"types":[]},{"text":"impl Serialize for Key","synthetic":false,"types":[]},{"text":"impl Serialize for GenericError","synthetic":false,"types":[]},{"text":"impl Serialize for FlashDriverError","synthetic":false,"types":[]},{"text":"impl Serialize for SbLoaderError","synthetic":false,"types":[]},{"text":"impl Serialize for PropertyStoreError","synthetic":false,"types":[]},{"text":"impl Serialize for CrcCheckerError","synthetic":false,"types":[]},{"text":"impl Serialize for Properties","synthetic":false,"types":[]},{"text":"impl Serialize for AvailableCommands","synthetic":false,"types":[]},{"text":"impl Serialize for AvailablePeripherals","synthetic":false,"types":[]},{"text":"impl Serialize for PfrKeystoreUpdateOptions","synthetic":false,"types":[]},{"text":"impl Serialize for IrqNotificationPin","synthetic":false,"types":[]},{"text":"impl Serialize for Error","synthetic":false,"types":[]},{"text":"impl Serialize for ProtectedFlash","synthetic":false,"types":[]},{"text":"impl&lt;CustomerData, VendorUsage&gt; Serialize for FactorySettings&lt;CustomerData, VendorUsage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: FactorySettingsCustomerData,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: FactorySettingsVendorUsage,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;CustomerData, VendorUsage&gt; Serialize for CustomerSettings&lt;CustomerData, VendorUsage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: CustomerSettingsCustomerData,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: CustomerSettingsVendorUsage,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;CustomerData, VendorUsage&gt; Serialize for WrappedFactorySettings&lt;CustomerData, VendorUsage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: FactorySettingsCustomerData,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: FactorySettingsVendorUsage,<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;CustomerData, VendorUsage&gt; Serialize for WrappedCustomerSettings&lt;CustomerData, VendorUsage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: CustomerSettingsCustomerData,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: CustomerSettingsVendorUsage,<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for KeystoreHeader","synthetic":false,"types":[]},{"text":"impl Serialize for Keycode","synthetic":false,"types":[]},{"text":"impl Serialize for ActivationCode","synthetic":false,"types":[]},{"text":"impl Serialize for Keystore","synthetic":false,"types":[]},{"text":"impl Serialize for NxpArea","synthetic":false,"types":[]},{"text":"impl Serialize for BootSpeed","synthetic":false,"types":[]},{"text":"impl Serialize for IspMode","synthetic":false,"types":[]},{"text":"impl Serialize for BootConfiguration","synthetic":false,"types":[]},{"text":"impl Serialize for UsbId","synthetic":false,"types":[]},{"text":"impl Serialize for TrustzoneMode","synthetic":false,"types":[]},{"text":"impl Serialize for SecureBootConfiguration","synthetic":false,"types":[]},{"text":"impl Serialize for PrinceConfiguration","synthetic":false,"types":[]},{"text":"impl Serialize for PrinceSubregion","synthetic":false,"types":[]},{"text":"impl Serialize for RawCustomerData","synthetic":false,"types":[]},{"text":"impl&lt;CustomerData, VendorUsage&gt; Serialize for CustomerSettingsArea&lt;CustomerData, VendorUsage&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: CustomerSettingsCustomerData,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: CustomerSettingsVendorUsage,<br>&nbsp;&nbsp;&nbsp;&nbsp;CustomerData: Serialize,<br>&nbsp;&nbsp;&nbsp;&nbsp;VendorUsage: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Header","synthetic":false,"types":[]},{"text":"impl Serialize for RawVendorUsage","synthetic":false,"types":[]},{"text":"impl Serialize for FactorySettingsProgInProgress","synthetic":false,"types":[]},{"text":"impl Serialize for RotKeysStatus","synthetic":false,"types":[]},{"text":"impl Serialize for PrinceIvCode","synthetic":false,"types":[]},{"text":"impl Serialize for MonotonicCounter","synthetic":false,"types":[]},{"text":"impl Serialize for RotKeyStatus","synthetic":false,"types":[]},{"text":"impl Serialize for DebugSecurityPolicy","synthetic":false,"types":[]},{"text":"impl Serialize for DebugSecurityPolicies","synthetic":false,"types":[]},{"text":"impl Serialize for Pki","synthetic":false,"types":[]},{"text":"impl Serialize for WrappedPki","synthetic":false,"types":[]},{"text":"impl Serialize for CertificateSlot","synthetic":false,"types":[]},{"text":"impl Serialize for Sha256Hash","synthetic":false,"types":[]},{"text":"impl Serialize for BootCommandDescriptor","synthetic":false,"types":[]},{"text":"impl Serialize for BootCommand","synthetic":false,"types":[]},{"text":"impl Serialize for Config","synthetic":false,"types":[]},{"text":"impl Serialize for Firmware","synthetic":false,"types":[]},{"text":"impl Serialize for Reproducibility","synthetic":false,"types":[]},{"text":"impl Serialize for Version","synthetic":false,"types":[]},{"text":"impl Serialize for Keyblob","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()